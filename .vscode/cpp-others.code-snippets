{
    // Place your CP-workplace workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "hoverline": {
        "scope": "cpp",
        "prefix": [
            "hoverline"
        ],
        "body": [
            "// @return {leftmost, rightmost}",
            "template <class Tp>",
            "std::pair<std::vector<ptrdiff_t>, std::vector<ptrdiff_t>> hoverline(std::vector<Tp> const &a) {",
            "std::vector<ptrdiff_t> l(a.size()), r(a.size());",
            "std::iota(l.begin(), l.end(), 0);",
            "std::iota(r.begin(), r.end(), 0);",
            "for (size_t i = 1; i < a.size(); ++i)",
            "while (l[i] && a[l[i] - 1] >= a[i]) l[i] = l[l[i] - 1];",
            "for (ptrdiff_t i = (ptrdiff_t)a.size() - 2; i >= 0; --i)",
            "while (r[i] < (ptrdiff_t)a.size() - 1 && a[r[i] + 1] >= a[i]) r[i] = r[r[i] + 1];",
            "return {l, r};",
            "}"
        ]
    },
    "gcc-ignore-warning": {
        "scope": "cpp",
        "prefix": [
            "gcc-ignore-warning",
            "ignore-warning"
        ],
        "body": [
            "#pragma GCC diagnostic ignored \"${1:-Wconversion}\"",
            "$2",
            "#pragma GCC diagnostic warning \"${1:-Wconversion}\""
        ]
    },
    "stdc++11": {
        "scope": "cpp",
        "prefix": [
            "stdc++11"
        ],
        "body": [
            "#ifndef _GLIBCXX_NO_ASSERT",
            "#include <cassert>",
            "#endif",
            "#include <cctype>",
            "#include <cerrno>",
            "#include <cfloat>",
            "#include <ciso646>",
            "#include <climits>",
            "#include <clocale>",
            "#include <cmath>",
            "#include <csetjmp>",
            "#include <csignal>",
            "#include <cstdarg>",
            "#include <cstddef>",
            "#include <cstdio>",
            "#include <cstdlib>",
            "#include <cstring>",
            "#include <ctime>",
            "#include <cwchar>",
            "#include <cwctype>",
            "#include <algorithm>",
            "#include <bitset>",
            "#include <complex>",
            "#include <deque>",
            "#include <exception>",
            "#include <fstream>",
            "#include <functional>",
            "#include <iomanip>",
            "#include <ios>",
            "#include <iosfwd>",
            "#include <iostream>",
            "#include <istream>",
            "#include <iterator>",
            "#include <limits>",
            "#include <list>",
            "#include <locale>",
            "#include <map>",
            "#include <memory>",
            "#include <new>",
            "#include <numeric>",
            "#include <ostream>",
            "#include <queue>",
            "#include <set>",
            "#include <sstream>",
            "#include <stack>",
            "#include <stdexcept>",
            "#include <streambuf>",
            "#include <string>",
            "#include <typeinfo>",
            "#include <utility>",
            "#include <valarray>",
            "#include <vector>",
            "#include <ccomplex>",
            "#include <cfenv>",
            "#include <cinttypes>",
            "#include <cstdalign>",
            "#include <cstdbool>",
            "#include <cstdint>",
            "#include <ctgmath>",
            "#include <cuchar>",
            "#include <array>",
            "#include <atomic>",
            "#include <chrono>",
            "#include <codecvt>",
            "#include <condition_variable>",
            "#include <forward_list>",
            "#include <future>",
            "#include <initializer_list>",
            "#include <mutex>",
            "#include <random>",
            "#include <ratio>",
            "#include <regex>",
            "#include <scoped_allocator>",
            "#include <system_error>",
            "#include <thread>",
            "#include <tuple>",
            "#include <typeindex>",
            "#include <type_traits>",
            "#include <unordered_map>",
            "#include <unordered_set>"
        ]
    },
    "stdc++98": {
        "scope": "cpp",
        "prefix": [
            "stdc++98"
        ],
        "body": [
            "#ifndef _GLIBCXX_NO_ASSERT",
            "#include <cassert>",
            "#endif",
            "#include <cctype>",
            "#include <cerrno>",
            "#include <cfloat>",
            "#include <ciso646>",
            "#include <climits>",
            "#include <clocale>",
            "#include <cmath>",
            "#include <csetjmp>",
            "#include <csignal>",
            "#include <cstdarg>",
            "#include <cstddef>",
            "#include <cstdio>",
            "#include <cstdlib>",
            "#include <cstring>",
            "#include <ctime>",
            "#include <cwchar>",
            "#include <cwctype>",
            "#include <algorithm>",
            "#include <bitset>",
            "#include <complex>",
            "#include <deque>",
            "#include <exception>",
            "#include <fstream>",
            "#include <functional>",
            "#include <iomanip>",
            "#include <ios>",
            "#include <iosfwd>",
            "#include <iostream>",
            "#include <istream>",
            "#include <iterator>",
            "#include <limits>",
            "#include <list>",
            "#include <locale>",
            "#include <map>",
            "#include <memory>",
            "#include <new>",
            "#include <numeric>",
            "#include <ostream>",
            "#include <queue>",
            "#include <set>",
            "#include <sstream>",
            "#include <stack>",
            "#include <stdexcept>",
            "#include <streambuf>",
            "#include <string>",
            "#include <typeinfo>",
            "#include <utility>",
            "#include <valarray>",
            "#include <vector>"
        ]
    }
}